diff --git a/data/inst22.txt b/data/inst22.txt
deleted file mode 100644
index 57a722c..0000000
--- a/data/inst22.txt
+++ /dev/null
@@ -1,131 +0,0 @@
-2 12 6
-48
-0 0 1
-0 0 0
-0 1 3
-0 1 2
-0 1 1
-0 2 5
-0 2 4
-0 3 5
-0 3 4
-0 4 5
-0 4 0
-0 5 5
-0 5 4
-0 5 2
-0 5 1
-0 5 0
-0 6 5
-0 6 4
-0 6 1
-0 6 0
-0 7 5
-0 8 3
-0 8 2
-0 8 1
-0 8 0
-0 9 4
-0 9 3
-0 10 3
-0 10 0
-0 11 5
-0 11 4
-0 11 0
-1 0 0 
-1 1 2
-1 1 1
-1 2 5
-1 3 5
-1 4 5
-1 5 5
-1 5 0
-1 6 5
-1 6 1
-1 6 0
-1 7 5
-1 8 1
-1 8 0
-1 10 0
-1 11 0
-54
-0 0 2
-0 0 3
-0 0 4
-0 0 5
-0 1 0
-0 1 4
-0 1 5
-0 2 0
-0 2 1
-0 2 2
-0 2 3
-0 3 0
-0 3 1
-0 3 2
-0 3 3
-0 4 1
-0 4 2
-0 4 3
-0 4 4
-0 5 3
-0 6 2
-0 6 3
-0 7 0
-0 7 1
-0 7 2
-0 7 3
-0 7 4
-0 8 4
-0 8 5
-0 9 0
-0 9 1
-0 9 2
-0 9 5
-0 10 1
-0 10 2
-0 10 4
-0 10 5
-0 11 1
-0 11 2
-0 11 3
-1 0 1
-1 1 3
-1 2 4
-1 3 4
-1 4 0
-1 5 1
-1 5 2
-1 5 4
-1 6 4
-1 8 2
-1 9 3
-1 9 4
-1 10 3
-1 11 4
-4
-34
-39
-43
-46
-36
-8
-4
-15
-20
-28
-38
-11
-21
-29
-2
-35
-45
-12
-6
-5
-24
-32
-36
-7
-41
diff --git a/data/inst23.txt b/data/inst23.txt
deleted file mode 100644
index f01e67d..0000000
--- a/data/inst23.txt
+++ /dev/null
@@ -1,130 +0,0 @@
-2 12 6
-48
-0 0 3
-0 0 2
-0 0 0
-0 1 5
-0 1 0
-0 2 5
-0 2 1
-0 2 0
-0 3 0
-0 4 5
-0 4 3
-0 4 2
-0 4 1
-0 5 3
-0 5 2
-0 6 5
-0 6 4
-0 6 3
-0 7 3
-0 7 2
-0 8 5
-0 8 2
-0 8 1
-0 8 0
-0 9 5
-0 9 0
-0 10 5
-0 11 5
-0 11 0
-1 0 3
-1 0 2
-1 1 0
-1 2 5
-1 2 0
-1 4 5
-1 4 2
-1 4 1
-1 5 3
-1 6 3
-1 7 3
-1 8 5
-1 8 2
-1 8 1
-1 8 0
-1 9 5
-1 9 0
-1 10 5
-1 11 0
-48
-0 0 1
-0 0 4
-0 0 5
-0 1 1
-0 1 2
-0 1 3
-0 1 4
-0 2 2
-0 2 3
-0 2 4
-0 3 1
-0 3 2
-0 3 3
-0 3 4
-0 3 5
-0 4 0
-0 4 4
-0 5 0
-0 5 1
-0 5 4
-0 5 5
-0 6 0
-0 6 1
-0 6 2
-0 7 0
-0 7 1
-0 7 4
-0 7 5
-0 8 3
-0 8 4
-0 9 1
-0 9 2
-0 9 3
-0 9 4
-0 10 0
-0 10 1
-0 10 2
-0 10 3
-0 10 4
-0 11 1
-0 11 2
-0 11 3
-0 11 4
-1 2 1
-1 4 3
-1 5 2
-1 6 4
-1 11 5
-4
-34
-38
-41
-46
-36
-12
-9
-17
-21
-26
-3
-15
-45
-25
-19
-47
-37
-40
-2
-33
-42
-12
-7
-7
-22
-2
-12
-36
-39
-8
diff --git a/data/inst24.txt b/data/inst24.txt
deleted file mode 100644
index b253495..0000000
--- a/data/inst24.txt
+++ /dev/null
@@ -1,133 +0,0 @@
-2 12 6
-48
-0 0 5
-0 0 0
-0 1 5
-0 1 3
-0 1 2
-0 1 0
-0 2 3
-0 3 3 
-0 4 3
-0 4 2
-0 4 1
-0 5 5
-0 5 4
-0 5 3
-0 6 5
-0 6 1
-0 6 0
-0 7 4
-0 7 3
-0 7 2
-0 7 1 
-0 7 0
-0 8 2
-0 8 1
-0 8 0 
-0 9 5
-0 10 5
-0 10 4
-0 11 3
-0 11 0
-1 0 5
-1 1 5
-1 1 3
-1 1 0
-1 2 3
-1 3 3
-1 5 5
-1 6 5
-1 6 0
-1 7 2
-1 7 1
-1 7 0
-1 8 1
-1 8 0
-1 9 5
-1 10 5
-1 10 4
-1 11 0
-46
-0 0 1
-0 0 2
-0 0 3
-0 0 4
-0 1 1
-0 1 4
-0 2 0
-0 2 1
-0 2 2
-0 2 4
-0 2 5
-0 3 0
-0 3 1
-0 3 2
-0 3 4
-0 3 5
-0 4 0
-0 4 4
-0 4 5
-0 5 0
-0 5 1
-0 5 2
-0 6 2
-0 6 3
-0 6 4
-0 7 5
-0 8 3
-0 8 4
-0 8 5
-0 9 0
-0 9 1
-0 9 2
-0 9 3
-0 9 4
-0 10 0
-0 10 1
-0 10 2
-0 10 3
-0 11 1
-0 11 2
-0 11 4
-0 11 5
-1 4 3
-1 5 3
-1 6 1
-1 7 3
-4
-35
-38
-45
-41
-36
-16
-7
-16
-21
-26
-37
-30
-1
-4
-34
-10
-28
-42
-44
-25
-46
-27
-2
-36
-40
-12
-8
-11
-20
-31
-2
-12
-17
-22
-9
diff --git a/include/all_model.h b/include/all_model.h
index ad6ccbc..8776330 100644
--- a/include/all_model.h
+++ b/include/all_model.h
@@ -77,7 +77,6 @@ public:
 
     int check_ss_slope(int& tc, int tt, int d, int a, int b);
     int check_ss_stable(int& tc, int tt, int d, int _x);
-    int check_ss(std::vector<TimeGraph*>& src, int& _time_counter, int start_time);
 
     void ls_analyze();
     double fx_function_solve(int x_size, char* x, bool edited = false);
diff --git a/src/all_model.cpp b/src/all_model.cpp
index 70f58a7..06326f1 100644
--- a/src/all_model.cpp
+++ b/src/all_model.cpp
@@ -261,41 +261,41 @@ All_Model* All_Model::clone() {
 }
 
 int All_Model::pop_area_pool(int idx) {
-        int a = area_pool[idx];
-        if (areas[a]->_h + 1 < H) {
-            int n = areas.size();
-            areas[n] = new dat(areas[a]->_h + 1, areas[a]->_w, areas[a]->_l);
-            area_pool[idx] = n;
+    int a = area_pool[idx];
+    if (areas[a]->_h + 1 < H) {
+        int n = areas.size();
+        areas[n] = new dat(areas[a]->_h + 1, areas[a]->_w, areas[a]->_l);
+        area_pool[idx] = n;
     } else {
-            area_pool[idx] = area_pool[area_pool.size() - 1];
-            area_pool.pop_back();
-        }
-        return a;
+        area_pool[idx] = area_pool[area_pool.size() - 1];
+        area_pool.pop_back();
     }
+    return a;
+}
 
 int All_Model::pop_res_ss_pool(int idx) {
-        int r = res_ss_pool[idx];
-        int nt = table[cc_containers[r]->_w][cc_containers[r]->_l][cc_containers[r]->_h - 1];
-        if (cc_containers[r]->_h - 1 >= 0 && res_ss.find(nt) != res_ss.end()) {
-            res_ss_pool[idx] = nt;
+    int r = res_ss_pool[idx];
+    int nt = table[cc_containers[r]->_w][cc_containers[r]->_l][cc_containers[r]->_h - 1];
+    if (cc_containers[r]->_h - 1 >= 0 && res_ss.find(nt) != res_ss.end()) {
+        res_ss_pool[idx] = nt;
     } else {
-            res_ss_pool[idx] = res_ss_pool[res_ss_pool.size() - 1];
-            res_ss_pool.pop_back();
-        }
-        return r;
+        res_ss_pool[idx] = res_ss_pool[res_ss_pool.size() - 1];
+        res_ss_pool.pop_back();
     }
+    return r;
+}
 
 int All_Model::pop_res_ls_pool(int idx) {
-        int r = res_ls_pool[idx];
-        int nt = table[cc_containers[r]->_w][cc_containers[r]->_l][cc_containers[r]->_h - 1];
-        if (cc_containers[r]->_h - 1 >= 0 && res_ls.find(nt) != res_ls.end()) {
-            res_ls_pool[idx] = nt;
+    int r = res_ls_pool[idx];
+    int nt = table[cc_containers[r]->_w][cc_containers[r]->_l][cc_containers[r]->_h - 1];
+    if (cc_containers[r]->_h - 1 >= 0 && res_ls.find(nt) != res_ls.end()) {
+        res_ls_pool[idx] = nt;
     } else {
-            res_ls_pool[idx] = res_ls_pool[res_ls_pool.size() - 1];
-            res_ls_pool.pop_back();
-        }
-        return r;
+        res_ls_pool[idx] = res_ls_pool[res_ls_pool.size() - 1];
+        res_ls_pool.pop_back();
     }
+    return r;
+}
 
 int All_Model::pop_pool(std::vector<int>& pool, int idx) {
     int r = pool[idx];
@@ -534,51 +534,37 @@ double All_Model::fx_function_solve_2(int x_size, char* x, bool edited) {
         double t_duration_4 = 0;
         double shift = 0, total_shift = 0;
 
-        std::vector<TimeGraph*> ls_time_graph;
-            
         t_duration_0 = (abs(W - _x) * TRAVEL_TIME);
-//        shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_0, W, _x);
-        ls_time_graph.push_back(new SlopeTimeGraph((int) t_y, (int) t_y + t_duration_0, W, _x));
-//        total_shift += shift;
-//        t_y += shift;
+        shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_0, W, _x);
+        total_shift += shift;
+        t_y += shift;
         t_y += t_duration_0;
 
         t_duration_1 = CONTROL_TIME;
-//        shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_1, _x);
-        ls_time_graph.push_back(new StableTimeGraph((int) t_y, (int) t_y + t_duration_1, _x));
-//        total_shift += shift;
-//        t_y += shift;
+        shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_1, _x);
+        total_shift += shift;
+        t_y += shift;
         t_y += t_duration_1;
 
         t_duration_2 = (abs(areas[a]->_w - _x) * TRAVEL_TIME);
         if (t_duration_2 > 0) {
-//            shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_2, _x, areas[a]->_w);
-            ls_time_graph.push_back(new SlopeTimeGraph((int) t_y, (int) t_y + t_duration_2, areas[a]->_w, _x));
-//            total_shift += shift;
-//            t_y += shift;
+            shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_2, _x, areas[a]->_w);
+            total_shift += shift;
+            t_y += shift;
         }
         t_y += t_duration_2;
 
         t_duration_3 = CONTROL_TIME;
-//        shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_3, areas[a]->_w);
-        ls_time_graph.push_back(new StableTimeGraph((int) t_y, (int) t_y + t_duration_3, areas[a]->_w));
-//        total_shift += shift;
-//        t_y += shift;
+        shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_3, areas[a]->_w);
+        total_shift += shift;
+        t_y += shift;
         t_y += t_duration_3;
 
         t_duration_4 = (abs(areas[a]->_w - W) * TRAVEL_TIME);
-//        shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_4, areas[a]->_w, W);
-        ls_time_graph.push_back(new SlopeTimeGraph((int) t_y, (int) t_y + t_duration_4, areas[a]->_w, W));
-//        total_shift += shift;
-//        t_y += shift;
+        shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_4, areas[a]->_w, W);
+        total_shift += shift;
+        t_y += shift;
         t_y += t_duration_4;
-        
-        total_shift = check_ss( ls_time_graph, time_counter, (int)t_y );
-            
-        for(auto& it: ls_time_graph){
-            delete it;
-        }
-        
         if (edited) {
             if (total_shift > 0) {
                 printf("WAIT %lf (%f + %f -> %f)\n", total_shift, y, total_shift, y + total_shift);
@@ -641,42 +627,30 @@ double All_Model::fx_function_solve_2(int x_size, char* x, bool edited) {
             double t_duration_4 = 0;
             double shift = 0, total_shift = 0;
 
-            std::vector<TimeGraph*> ls_time_graph;
-            
             t_duration_0 = CONTROL_TIME;
-//            shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_0, W);
-            ls_time_graph.push_back(new StableTimeGraph((int) t_y, (int) t_y + t_duration_0, W));
-//            total_shift += shift;
-//            t_y += shift;
+            shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_0, W);
+            total_shift += shift;
+            t_y += shift;
             t_y += t_duration_0;
 
             t_duration_1 = (abs(areas[a]->_w - W) * TRAVEL_TIME);
-//            shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_1, W, areas[a]->_w);
-            ls_time_graph.push_back(new SlopeTimeGraph((int) t_y, (int) t_y + t_duration_1, W, areas[a]->_w));
-//            total_shift += shift;
-//            t_y += shift;
+            shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_1, W, areas[a]->_w);
+            total_shift += shift;
+            t_y += shift;
             t_y += t_duration_1;
 
             t_duration_2 = CONTROL_TIME;
-//            shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_2, areas[a]->_w);
-            ls_time_graph.push_back(new StableTimeGraph((int) t_y, (int) t_y + t_duration_2, areas[a]->_w));
-//            total_shift += shift;
-//            t_y += shift;
+            shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_2, areas[a]->_w);
+            total_shift += shift;
+            t_y += shift;
             t_y += t_duration_2;
 
             t_duration_3 = (abs(W - areas[a]->_w) * TRAVEL_TIME);
-//            shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_3, areas[a]->_w, W);
-            ls_time_graph.push_back(new SlopeTimeGraph((int) t_y, (int) t_y + t_duration_3, areas[a]->_w, W));
-//            total_shift += shift;
-//            t_y += shift;
+            shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_3, areas[a]->_w, W);
+            total_shift += shift;
+            t_y += shift;
             t_y += t_duration_3;
 
-            total_shift = check_ss( ls_time_graph, time_counter, (int)t_y );
-            
-            for(auto& it: ls_time_graph){
-                delete it;
-            }
-            
             if (edited) {
                 if (total_shift > 0) {
                     printf("WAIT %lf (%lf + %lf -> %lf)\n", total_shift, y, total_shift, y + total_shift);
@@ -714,42 +688,30 @@ double All_Model::fx_function_solve_2(int x_size, char* x, bool edited) {
             double t_duration_4 = 0;
             double shift = 0, total_shift = 0;
 
-            std::vector<TimeGraph*> ls_time_graph;
-            
             t_duration_0 = abs(cc_containers[r]->_w - W) * TRAVEL_TIME;
-//            shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_0, W, cc_containers[r]->_w);
-            ls_time_graph.push_back(new SlopeTimeGraph((int) t_y, (int) t_y + t_duration_0, W, cc_containers[r]->_w));
-//            total_shift += shift;
-//            t_y += shift;
+            shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_0, W, cc_containers[r]->_w);
+            total_shift += shift;
+            t_y += shift;
             t_y += t_duration_0;
-//
+
             t_duration_1 = CONTROL_TIME;
-//            shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_1, cc_containers[r]->_w);
-            ls_time_graph.push_back(new StableTimeGraph((int) t_y, (int) t_y + t_duration_1, cc_containers[r]->_w));
-//            total_shift += shift;
-//            t_y += shift;
+            shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_1, cc_containers[r]->_w);
+            total_shift += shift;
+            t_y += shift;
             t_y += t_duration_1;
-//
+
             t_duration_2 = abs(W - cc_containers[r]->_w) * TRAVEL_TIME;
-//            shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_2, cc_containers[r]->_w, W);
-            ls_time_graph.push_back(new SlopeTimeGraph((int) t_y, (int) t_y + t_duration_2, cc_containers[r]->_w, W));
-//            total_shift += shift;
-//            t_y += shift;
+            shift = (double) check_ss_slope(time_counter, (int) t_y, (int) t_duration_2, cc_containers[r]->_w, W);
+            total_shift += shift;
+            t_y += shift;
             t_y += t_duration_2;
-//
+
             t_duration_3 = CONTROL_TIME;
-//            shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_3, W);
-            ls_time_graph.push_back(new StableTimeGraph((int) t_y, (int) t_y + t_duration_3, W));
-//            total_shift += shift;
-//            t_y += shift;
+            shift = (double) check_ss_stable(time_counter, (int) t_y, (int) t_duration_3, W);
+            total_shift += shift;
+            t_y += shift;
             t_y += t_duration_3;
 
-            total_shift = check_ss( ls_time_graph, time_counter, (int)t_y );
-            
-            for(auto& it: ls_time_graph){
-                delete it;
-            }
-            
             if (edited) {
                 if (total_shift > 0) {
                     printf("WAIT %lf (%lf + %lf -> %lf)\n", total_shift, y, total_shift, y + total_shift);
@@ -826,29 +788,6 @@ int All_Model::check_ss_stable(int& tc, int tt, int d, int a) {
     return shift;
 }
 
-int All_Model::check_ss(std::vector<TimeGraph*>& src, int& _time_counter, int start_time){
-    int shifter = 0;
-    int i = start_time;
-    int j = start_time;
-    int src_counter = 0;
-    int time_counter = _time_counter;
-    while (time_counter < ss_graph.size() && src_counter < src.size()) {
-        bool ret = TimeGraph::compare(ss_graph[time_counter], src[src_counter], i + shifter, j);
-        if (ret) {
-            shifter+= TRAVEL_TIME;
-            src_counter = 0;
-            time_counter = _time_counter;
-        } else {
-            i+= TRAVEL_TIME;
-            j+= TRAVEL_TIME;
-        }
-        if (ss_graph[time_counter]->outer(i + shifter)) time_counter++;
-        if (src[src_counter]->outer(j)) src_counter++;
-    }
-    _time_counter = time_counter;
-    return shifter;
-}
-
 int All_Model::check_ss(TimeGraph* src, int& time_counter, int start_time) {
     int shifter = 0;
     int i = start_time;
@@ -856,10 +795,10 @@ int All_Model::check_ss(TimeGraph* src, int& time_counter, int start_time) {
     while (time_counter < ss_graph.size()) {
         bool ret = TimeGraph::compare(ss_graph[time_counter], src, i + shifter, j);
         if (ret) {
-            shifter += TRAVEL_TIME;
+            shifter++;
         } else {
-            i += TRAVEL_TIME;
-            j += TRAVEL_TIME;
+            i++;
+            j++;
         }
         if (ss_graph[time_counter]->outer(i + shifter)) time_counter++;
         if (src->outer(j)) break;
